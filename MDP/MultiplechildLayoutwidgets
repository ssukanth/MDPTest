1. Column
===============
>Useful to align array of widgets vertically.
>The column widget is not scrollable and there will be error if we try to fit in more 
children than it will fit in the given screensize.
>to make a scrollable widget list , use ListView (align vertical for Column and Horizontal
for Row)
>If we have only one child to align then , Align or Center widgets are the better choices
>The children of the column widget can be aligned using 
MainAxisAlignment (Vertical) and CrossAxisAlignment (Horizontal) 
> The column takes the width of the child
>Height can be defined using the "Mainaxissize" property.
if the Mainaxissize.Max , then the height of the column would be maximum of the parent's
constraints

Constructors:
===============
Column({Key key, MainAxisAlignment mainAxisAlignment: MainAxisAlignment.start, MainAxisSize mainAxisSize: MainAxisSize.max, CrossAxisAlignment crossAxisAlignment: CrossAxisAlignment.center, TextDirection textDirection, VerticalDirection verticalDirection: VerticalDirection.down, TextBaseline textBaseline, List<Widget> children: const [] })
Creates a vertical array of children. [...]

Properties :
================
1. children
2. mainaxisalignment - how children are to be placed along the mainaxis (vertical)
3. corssaxisalignment - how the children are to be placed aling the crossaxis (horizontal)
4. mainaxis - how much space should be occupied aliong the main axis (height of the widget is defined)
5. direction - The direction (vertical\horizontal) to be used as main axis.
6. key - controls how one widget replaces another widget in the tree.
7. textBaseline → TextBaseline
If aligning items according to their baseline, which baseline to use.

8. textDirection → TextDirection
Determines the order to lay children out horizontally and how to interpret start and end in the horizontal direction. [...]

9. verticalDirection → VerticalDirection
Determines the order to lay children out vertically and how to interpret start and end in the vertical direction. [...]

2. CustomMultichildLayout
3. Flow
4. GridView
5. IndxedStack
6. LayoutBuilder
7. ListBody
8. ListView
9. Row
10.Stack
11. Table
12 Wrap

